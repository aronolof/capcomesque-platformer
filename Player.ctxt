#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ The\ player.\ Has\ a\ number\ of\ internal\ variables\ that\ are\ used\r\n\ to\ determine\ position,\ collisions,\ gravity,\ and\ so\ on.\r\n\ \r\n\ @author\ Aron\ Strandberg\r\n\ @version\ 2019-01-25\r\n
comment1.params=
comment1.target=Player()
comment1.text=\r\n
comment10.params=
comment10.target=void\ yMovement()
comment10.text=\r\n\ Checks\ if\ there\ is\ an\ obstacle\ under\ the\ player,\ and\ if\ so,\ sets\ the\ terminal\ velocity\ to\ 0\ \r\n
comment11.params=
comment11.target=void\ preventStuck()
comment11.text=\ \r\n\ This\ method\ moves\ the\ player\ out\ of\ obstacles,\ if\ necessary\r\n
comment12.params=
comment12.target=void\ animation()
comment12.text=\r\n\ Determines\ which\ animation\ to\ use\ with\ which\ action.\r\n
comment13.params=
comment13.target=int\ isUnderwater()
comment13.text=\r\n\ Checks\ if\ the\ player\ is\ located\ in\ water,\ which\ changes\ the\ physics.\r\n
comment14.params=
comment14.target=void\ checkDeath()
comment14.text=\r\n\ Checks\ if\ something\ is\ hurting\ (killing)\ the\ player.\ For\ now,\ there\ are\ only\ spike\ objects.\r\n
comment15.params=
comment15.target=void\ collectKey()
comment15.text=\r\n\ Picking\ up\ the\ key\ that\ opens\ the\ door\ to\ the\ next\ level.\r\n
comment16.params=
comment16.target=void\ levelGoal()
comment16.text=\r\n\ Advanced\ the\ game\ to\ the\ next\ level\ if\ the\ player\ touches\ an\ open\ door\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ All\ the\ player\ physics\ and\ interaction\ with\ surrounding\ are\ kept\ track\ of\ here.\r\n
comment3.params=offset
comment3.target=boolean\ noLRCollision(int)
comment3.text=\r\n\ Method\ for\ horizontal\ collision\ detection.\ The\ loop\ makes\ sure\ that\ all\ pixels\ next\ to\ the\ player\ are\ checked.\r\n\ \r\n\ @param\ \ offset\ \ the\ x\ position\ used\ to\ determine\ on\ which\ side\ of\ the\ player\ to\ scan.\r\n
comment4.params=offset
comment4.target=boolean\ noTDCollision(int)
comment4.text=\r\n\ Method\ for\ vertical\ collision\ detection.\ The\ loop\ makes\ sure\ that\ all\ pixels\ next\ to\ the\ player\ are\ checked.\r\n\ \r\n\ @param\ \ offset\ \ the\ y\ position\ used\ to\ determine\ on\ which\ side\ of\ the\ player\ to\ scan.\r\n
comment5.params=
comment5.target=void\ xMovement()
comment5.text=\r\n\ Method\ used\ to\ move\ the\ player\ horizontally\ if\ possible\r\n
comment6.params=speed
comment6.target=void\ moveRight(int)
comment6.text=\r\n\ Moves\ the\ player\ to\ the\ right.\ @param\ speed\ determines\ how\ many\ pixels.\r\n
comment7.params=speed
comment7.target=void\ moveLeft(int)
comment7.text=\r\n\ Moves\ the\ player\ to\ the\ left.\ @param\ speed\ determines\ how\ many\ pixels.\r\n
comment8.params=
comment8.target=void\ checkJumping()
comment8.text=\r\n\ Checks\ if\ the\ player\ is\ able\ to\ and\ wants\ to\ jump\ and\ then\ performs\ it\r\n
comment9.params=
comment9.target=void\ gravity()
comment9.text=\r\n\ Sets\ the\ new\ vertical\ position,\ calculated\ from\ the\ vertical\ velocity.\r\n
numComments=17
